/* .top-about
   ========================================================================== */

.top-about {
	position: relative;
	z-index: 1;
	height: 100%;
	overflow: hidden;
	will-change: transform;
}

.top-about__lead {
	position: absolute;
	// width: 59.1rem;
	top: 50%;
	left: calc(50% - 3rem);
	z-index: 1;
	transform: translate(-100%, -50%);
	// width: 57rem;
	width: 51rem;
	@include mq-down() {
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		transform: none;
	}
}

.top-about__lead__title {
	width: 100%;
	will-change: transform, opacity;
	@include mq-down() {
		position: absolute;

		top: calc(var(--header-height) + 5vh);
		left: var(--page-gutter);
		width: 61rem;
		transform: none;
	}
}

.top-about__lead__body {
	margin-top: 7rem;
	text-align: justify;
	line-height: calc(36 / 15);
	font-size: 1.3rem;
	font-weight: 500;
	color: white;
	// letter-spacing: -0.025em;
	@include mq-down() {
		display: none;
		// visibility: hidden;
		// display: flex;
		// flex-direction: column;
		// align-items: center;
		// justify-content: center;
		// position: absolute;
		// top: 0;
		// left: 0;
		// z-index: 99;
		// width: 100%;
		// height: 100%;
		// margin-top: 0;
		// padding-right: var(--page-gutter);
		// padding-left: var(--page-gutter);
		// padding-bottom: 10rem;
		// background-color: rgba(255, 255, 255, 0.95);
		// font-size: 2.8rem;
		// line-height: calc(64 / 28);
		// color: var(--key-color-black);
		// letter-spacing: 0.02em;
	}
	p {
		width: 47.7rem;
		will-change: transform;
		@include mq-down() {
			width: 100%;
		}
		& + p {
			margin-top: 2.5em;
		}
	}
	// background-color: rgba(255, 0, 0, 0.5); // 開発用
}

.top-about__blocks-content {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	// left: calc(50% - 8.5rem);
	left: calc(50% - 5.5rem);
	width: 84rem;
	@include mq-down() {
		top: auto;
		bottom: -4.7rem;
		left: -5.5rem;
		width: 90.1rem;
		transform: none;
		@media (min-aspect-ratio: 9/16) {
			bottom: -18rem;
		}
	}

	// height: 100%;
}

.top-about__blocks-items {
	--containerWidth: 844;
	--containerHeight: 1051;
	position: relative;
	@include mq-down() {
		--containerWidth: 904;
		--containerHeight: 865;
	}
	aspect-ratio: var(--containerWidth) / var(--containerHeight);
	@supports not (aspect-ratio: var(--containerWidth) / var(--containerHeight)) {
		padding-top: calc((var(--containerHeight) / var(--containerWidth)) * 100%);
		height: 0;
	}
}

.top-about__blocks-item {
	position: absolute;
	&:nth-of-type(1) {
		left: containerRatio(250.8089, var(--containerWidth));
		top: containerRatio(0, var(--containerHeight));
		width: containerRatio(372, var(--containerWidth));
		@include mq-down() {
			left: containerRatio(427, var(--containerWidth));
			width: containerRatio(221, var(--containerWidth));
		}
	}
	&:nth-of-type(2) {
		left: containerRatio(451.8089, var(--containerWidth));
		top: containerRatio(185, var(--containerHeight));
		width: containerRatio(405, var(--containerWidth));
		@include mq-down() {
			top: containerRatio(69, var(--containerHeight));
			left: containerRatio(558, var(--containerWidth));
			width: containerRatio(346, var(--containerWidth));
		}
	}
	&:nth-of-type(3) {
		left: containerRatio(390.8089, var(--containerWidth));
		top: containerRatio(476, var(--containerHeight));
		width: containerRatio(240, var(--containerWidth));
		@include mq-down() {
			left: containerRatio(519, var(--containerWidth));
			top: containerRatio(356, var(--containerHeight));
			width: containerRatio(235, var(--containerWidth));
		}
	}
	&:nth-of-type(4) {
		left: containerRatio(525.9354, var(--containerWidth));
		top: containerRatio(611, var(--containerHeight));
		width: containerRatio(240, var(--containerWidth));
		@include mq-down() {
			left: containerRatio(653.8753, var(--containerWidth));
			top: containerRatio(487.4863, var(--containerHeight));
			width: containerRatio(235.2506, var(--containerWidth));
		}
	}
	&:nth-of-type(5) {
		left: containerRatio(155.9354, var(--containerWidth));
		top: containerRatio(611, var(--containerHeight));
		width: containerRatio(440, var(--containerWidth));
		@include mq-down() {
			left: containerRatio(314.3004, var(--containerWidth));
			top: containerRatio(489.7055, var(--containerHeight));
			width: containerRatio(374.8703, var(--containerWidth));
		}
	}
	&:nth-of-type(6) {
		left: containerRatio(12.9354, var(--containerWidth));
		top: containerRatio(611, var(--containerHeight));
		width: containerRatio(220, var(--containerWidth));
		@include mq-down() {
			left: containerRatio(0, var(--containerWidth));
			top: containerRatio(450.777, var(--containerHeight));
			width: containerRatio(333.5605, var(--containerWidth));
		}
	}
	&:nth-of-type(7) {
		left: containerRatio(0, var(--containerWidth));
		top: containerRatio(213.2284, var(--containerHeight));
		width: containerRatio(496, var(--containerWidth));
		@include mq-down() {
			top: containerRatio(76, var(--containerHeight));
			left: containerRatio(93, var(--containerWidth));
			width: containerRatio(524, var(--containerWidth));
		}
	}
	img {
		will-change: transform;
	}
}

.top-about__bg {
	position: absolute;
	width: 100%;
	height: 100%;
	z-index: -1;
	will-change: opacity;
}

.top-about__bg-fill {
	/*
		斜めの角度を画像と同じく45度にしたいので、
		ひし形のセンターを右隅に合わせ、高さを覆うようにvmax値にし、
		clip-pathを50%を初期値として、アニメーションさせる。
		初期値は手順（0〜）の通り。
	*/

	--top-about__bg-fill-side-length: 280vmax; // 長い方の辺（値は目視で得た（正方形のビューポートを埋めるときの最大値を設定）。なぜこの値になるかは分からないが（端数は大雑把に余裕をもたせた）、回転させたときに生じる比率があるっぽい。）
	// ※gsapはパフォーマンス用にtranslate3dがつくが、アニメーション後にウィンドウサイズを変更するとそれが、反応してマスク位置がずれる現象がった。

	position: absolute;
	z-index: 3;
	right: calc(
		var(--top-about__bg-fill-side-length) / -2
	); // 1 中心点を右隅にあわせる（translateでやるとgsapアニメーションで不都合があった※）
	bottom: calc(
		var(--top-about__bg-fill-side-length) / -2
	); // 1 中心点を右隅にあわせる（translateでやるとgsapアニメーションで不都合があった※）
	transform: rotate(45deg); // 2 傾ける
	width: var(--top-about__bg-fill-side-length); // 0 正方形
	height: var(--top-about__bg-fill-side-length); // 0 正方形
	// clip-path: inset(0 0 0 50%); //3 半分マスクする（js側でセット）
	background-color: #003383;
	mix-blend-mode: multiply;
	will-change: clip-path, opacity;
}

.top-about__bg-image {
	position: absolute;
	width: 100%;
	height: 100%;
	z-index: 1;
	img {
		width: calc((1544 / 1400) * 100%);
		height: 100%;
		object-fit: cover;
		object-position: left center;
		will-change: transform;
		@include mq-down() {
			width: 100%;
			height: 100%;
			background-color: #003383;
		}
	}
}
